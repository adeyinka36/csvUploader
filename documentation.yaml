openapi: "3.0.0"
info:
  version: 1.0.0
  title: Person API
  description: API for managing people data
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
  - url: http://ec2-con-ip/v1
    description: EC2 container server
paths:
  /persons:
    get:
      tags:
        - All
      summary: List all persons
      responses:
        '200':
          description: A list of persons.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      _self:
                        type: object
                        properties:
                          href:
                            type: string
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                      previous:
                        type: object
                        properties:
                          href:
                            type: string
                  count:
                    type: integer
                  total:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Person'
    post:
      summary: Create a new person
      tags:
        - Create
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreateUpdate'
        required: true
      responses:
        '201':
          description: Created person data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /persons/{id}:
    get:
      tags:
        - Show
      summary: Get a person by ID
      operationId: getPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      summary: Update a person by ID
      tags:
        - Update
      operationId: updatePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreateUpdate'
        required: true
      responses:
        '200':
          description: Updated person data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      summary: Delete a person by ID
      tags:
        - Delete
      operationId: deletePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person deleted
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        first_name:
          type: string
        initial:
          type: string
        last_name:
          type: string
      required:
        - title
        - first_name
        - last_name

    PersonCreateUpdate:
      type: object
      properties:
        title:
          type: string
        first_name:
          type: string
          nullable: true
        initial:
          type: string
          nullable: true
        last_name:
          type: string